version: 2

project_name: tf-manage2

before:
  hooks:
    - go mod tidy
    - go test ./...

builds:
  - id: tf
    binary: tf
    main: ./main.go
    env:
      - CGO_ENABLED=0
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64

archives:
  - id: default
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - README.md
      - LICENSE
      - bin/tf_complete.sh
      - bin/tf_complete.zsh

release:
  github:
    owner: sorinlg
    name: tf-manage2
  # Replace existing artifacts to handle force pushes on develop branch
  replace_existing_artifacts: true
  # Allow overwriting pre-release binaries when tags are force-pushed
  make_latest: false  # Don't mark prereleases as "latest"
  prerelease: auto    # Auto-detect prereleases based on version (alpha/beta/rc)
  name_template: "v{{.Version}}"
  header: |
    ## tf-manage2 v{{.Version}}

    Terraform workspace manager with enhanced CI/CD detection and interactive commands.
  footer: |
    **Full Changelog**: https://github.com/sorinlg/tf-manage2/compare/{{.PreviousTag}}...{{.Tag}}

    ## Installation

    ### Homebrew (macOS/Linux)
    ```bash
    brew install sorinlg/tap/tf-manage2
    ```

    ### Manual Download
    Download the appropriate binary for your platform from the assets below.

checksum:
  name_template: "checksums.txt"

brews:
  # Main tap for stable releases only
  - name: tf-manage2
    repository:
      owner: sorinlg
      name: homebrew-tap
      branch: main
      token: "{{ .Env.HOMEBREW_GITHUB_API_TOKEN }}"
    url_template: "https://github.com/sorinlg/tf-manage2/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    download_strategy: CurlDownloadStrategy
    commit_author:
      name: Sorin Lacriteanu
      email: sorin.lacriteanu@gmail.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    homepage: "https://github.com/sorinlg/tf-manage2"
    description: "Terraform workspace manager with enhanced CI/CD detection and interactive commands"
    license: "MIT"
    skip_upload: "{{ .Env.IS_PRERELEASE }}" # Skip prereleases for main tap
    dependencies:
      - name: terraform
        type: optional
    test: |
      system "#{bin}/tf", "--help"
    install: |
      bin.install "tf"
      bash_completion.install "bin/tf_complete.sh" => "tf"
      zsh_completion.install "bin/tf_complete.zsh" => "_tf"

  # Dev tap for prereleases (alpha, beta, rc)
  - name: tf-manage2-dev
    repository:
      owner: sorinlg
      name: homebrew-dev-tap
      branch: main
      token: "{{ .Env.HOMEBREW_GITHUB_API_TOKEN }}"
    url_template: "https://github.com/sorinlg/tf-manage2/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    download_strategy: CurlDownloadStrategy
    commit_author:
      name: Sorin Lacriteanu
      email: sorin.lacriteanu@gmail.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} development version {{ .Tag }}"
    homepage: "https://github.com/sorinlg/tf-manage2"
    description: "Terraform workspace manager with enhanced CI/CD detection and interactive commands (development version)"
    license: "MIT"
    skip_upload: "{{ not .Env.IS_PRERELEASE }}" # Only upload prereleases to dev tap
    dependencies:
      - name: terraform
        type: optional
    test: |
      system "#{bin}/tf", "--help"
    install: |
      bin.install "tf"
      bash_completion.install "bin/tf_complete.sh" => "tf"
      zsh_completion.install "bin/tf_complete.zsh" => "_tf"

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^chore:"
      - "^ci:"
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: "Bug fixes"
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: "Performance improvements"
      regexp: "^.*perf[(\\w)]*:+.*$"
      order: 2
    - title: Others
      order: 999
